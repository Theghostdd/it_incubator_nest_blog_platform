name: Tests & Vercel Deploy

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ "dev" ]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: sa
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Create Database and Tables from SQL File
        run: |
          export PGPASSWORD=sa
          psql -h localhost -U postgres -c 'CREATE DATABASE blog_platform WITH LC_COLLATE = "C" LC_CTYPE = "C" TEMPLATE = template0;' || { echo 'Failed to create database'; exit 1; }
          sleep 5
          psql -h localhost -U postgres -d blog_platform -f setup.sql || { echo 'Failed to set up database'; exit 1; }

      - name: Run e2e tests
        run: yarn test:e2e
        env:
          ENV: ${{ vars.ENV_GH }}
          SUPER_ADMIN_LOGIN: ${{secrets.SUPER_ADMIN_LOGIN}}
          SUPER_ADMIN_PASSWORD: ${{secrets.SUPER_ADMIN_PASSWORD}}
          PASSWORD_MAIL_AGENT: ${{vars.ENV_GH_PASSWORD_MAIL_AGENT}}
          JWT_ACCESS_TOKEN_SECRET: ${{secrets.JWT_ACCESS_TOKEN_SECRET}}
          JWT_REFRESH_TOKEN_SECRET: ${{secrets.JWT_REFRESH_TOKEN_SECRET}}
          LOGIN_MAIL_AGENT: "some@gmail.com"

  deploy:
    name: Deploy
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}



